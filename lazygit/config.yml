theme:
  activeBorderColor:
    - "#f5e0dc"
    - bold
  inactiveBorderColor:
    - "#a6adc8"
  optionsTextColor:
    - "#89b4fa"
  selectedLineBgColor:
    - "#313244"
  cherryPickedCommitBgColor:
    - "#45475a"
  cherryPickedCommitFgColor:
    - "#f5e0dc"
  unstagedChangesColor:
    - "#f38ba8"
  defaultFgColor:
    - "#cdd6f4"
  searchingActiveBorderColor:
    - "#f9e2af"

authorColors:
  "*": "#b4befe"

customCommands:
  # retrieved from: https://github.com/jesseduffield/lazygit/wiki/Custom-Commands-Compendium#conventional-commit
  - key: "<c-v>"
    context: "global"
    description: "Create new conventional commit"
    prompts:
      - type: "menu"
        key: "Type"
        title: "Type of change"
        options:
          - name: "build"
            description: "Changes that affect the build system or external dependencies"
            value: "build"
          - name: "feat"
            description: "A new feature"
            value: "feat"
          - name: "fix"
            description: "A bug fix"
            value: "fix"
          - name: "chore"
            description: "Other changes that don't modify src or test files"
            value: "chore"
          - name: "ci"
            description: "Changes to CI configuration files and scripts"
            value: "ci"
          - name: "docs"
            description: "Documentation only changes"
            value: "docs"
          - name: "perf"
            description: "A code change that improves performance"
            value: "perf"
          - name: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "revert"
            description: "Reverts a previous commit"
            value: "revert"
          - name: "style"
            description: "Changes that do not affect the meaning of the code"
            value: "style"
          - name: "test"
            description: "Adding missing tests or correcting existing tests"
            value: "test"
      - type: "input"
        title: "Scope"
        key: "Scope"
        initialValue: ""
      - type: "menu"
        key: "Breaking"
        title: "Breaking change"
        options:
          - name: "no"
            value: ""
          - name: "yes"
            value: "!"
      - command: gitmoji -l
        filter: ^(.*?) - (:.*?:) - (.*)$
        key: "Emoji"
        labelFormat: "{{ .group_1 }} - {{ .group_3 }}"
        title: "Choose a gitmoji: "
        type: menuFromCommand
        valueFormat: "{{ .group_2 }}"
      - type: "input"
        title: "message"
        key: "Message"
        initialValue: ""
      - type: "confirm"
        key: "Confirm"
        title: "Commit"
        body: "Are you sure you want to commit?"
    command: "git commit --message '{{.Form.Type}}{{ if .Form.Scope }}({{ .Form.Scope }}){{ end }}{{.Form.Breaking}}: {{ if .Form.Emoji }}{{ .Form.Emoji }} {{ end }}{.Form.Message}}'"
    loadingText: "Creating conventional commit..."
